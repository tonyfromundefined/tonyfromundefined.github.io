{"version":3,"sources":["webpack:///./src/constants/authors.ts","webpack:///./src/templates/post.tsx","webpack:///./node_modules/core-js/modules/es6.array.find.js"],"names":["authors","username","displayName","avatarImageUrl","introduction","PostContainer","styled","div","FloatingCaption","Title","Authors","ContentContainer","Author","props","AuthorContainer","AuthorAvatar","AuthorRight","AuthorNames","AuthorDisplayName","AuthorUsername","AuthorIntroduction","query","TemplatePost","post","data","frontmatter","title","author","html","Layout","Section","map","index","find","key","dangerouslySetInnerHTML","__html","$export","$find","forced","Array","P","F","callbackfn","this","arguments","length","undefined"],"mappings":"mJAOaA,EAAqB,CAChC,CACEC,SAAU,oBACVC,YAAa,OACbC,eAAgB,GAChBC,aAAc,kG,kgDCDlB,IAiDMC,EAAgBC,IAAOC,IAAV,KAIbC,EAAkBF,IAAOC,IAAV,KAOfE,EAAQH,IAAOC,IAAV,KAQLG,EAAUJ,IAAOC,IAAV,KAMPI,EAAmBL,IAAOC,IAAV,KAKhBK,EAA4B,SAACC,GACjC,OACE,kBAACC,EAAD,KACE,kBAACC,EAAD,MACA,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAoBL,EAAMX,aAC1B,kBAACiB,EAAD,SAAkBN,EAAMZ,WAE1B,kBAACmB,EAAD,KACGP,EAAMT,iBAOXU,EAAkBR,IAAOC,IAAV,KAKfQ,EAAeT,IAAOC,IAAV,KAQZS,EAAcV,IAAOC,IAAV,KAIXU,EAAcX,IAAOC,IAAV,KAMXW,EAAoBZ,IAAOC,IAAV,KAMjBY,EAAiBb,IAAOC,IAAV,KAIda,EAAqBd,IAAOC,IAAV,KAKXc,EAAQ,aAYNC,UAlJoC,SAAC,GAAa,IACvDC,EADuD,EAAXC,KAC5CD,KAER,OACGA,GACAA,EAAKE,aACLF,EAAKE,YAAYC,OACjBH,EAAKE,YAAYE,QACjBJ,EAAKK,KAMN,kBAACC,EAAA,EAAD,KACE,kBAACxB,EAAD,KACE,kBAACyB,EAAA,EAAD,KACE,kBAACrB,EAAD,KACE,kBAACD,EAAD,WACCe,EAAKE,YAAYC,QAGtB,kBAACI,EAAA,EAAD,KACE,kBAACpB,EAAD,KACE,kBAACF,EAAD,YACCe,EAAKE,YAAYE,OAAOI,KAAI,SAAC9B,EAAU+B,GACtC,IAAML,EAAS3B,EAAQiC,MAAK,SAACN,GAAD,OAAYA,EAAO1B,WAAaA,KAE5D,OAAK0B,EAGH,kBAAC,EAAD,eACEO,IAAKF,GACDL,IALc,UAW5B,kBAACG,EAAA,EAAD,KACE,kBAACnB,EAAD,KACE,yBAAKwB,wBAAyB,CAAEC,OAAQb,EAAKK,YA/B9C,wC,iCCnBX,IAAIS,EAAU,EAAQ,GAClBC,EAAQ,EAAQ,GAAR,CAA4B,GAEpCC,GAAS,EADH,QAGC,IAAIC,MAAM,GAAM,MAAE,WAAcD,GAAS,KACpDF,EAAQA,EAAQI,EAAIJ,EAAQK,EAAIH,EAAQ,QAAS,CAC/CN,KAAM,SAAcU,GAClB,OAAOL,EAAMM,KAAMD,EAAYE,UAAUC,OAAS,EAAID,UAAU,QAAKE,MAGzE,EAAQ,GAAR,CATU","file":"component---src-templates-post-tsx-79bcfc975075080c4302.js","sourcesContent":["export interface IAuthor {\n  username: string\n  displayName: string\n  avatarImageUrl: string\n  introduction: string\n}\n\nexport const authors: IAuthor[] = [\n  {\n    username: 'tonyfromundefined',\n    displayName: 'Tony',\n    avatarImageUrl: '',\n    introduction: '국회에서 의결된 법률안은 정부에 이송되어 15일 이내에 대통령이 공포한다. 감사원은 세입·세출의 결산을 매년 검사하여 대통령과 차년도국회에 그 결과를 보고하여야 한다.',\n  },\n]\n","import { graphql } from 'gatsby'\nimport React from 'react'\nimport Section from '~/components/atoms/Section'\nimport Layout from '~/components/Layout'\nimport { authors, IAuthor } from '~/constants'\nimport styled from '~/styled'\nimport { GetPostTemplateQuery } from '../generated/graphql'\n\ninterface ITemplatePostProps {\n  data: GetPostTemplateQuery\n}\nconst TemplatePost: React.FC<ITemplatePostProps> = ({ data }) => {\n  const { post } = data\n\n  if (\n    !post ||\n    !post.frontmatter ||\n    !post.frontmatter.title ||\n    !post.frontmatter.author ||\n    !post.html\n  ) {\n    return <div>error</div>\n  }\n\n  return (\n    <Layout>\n      <PostContainer>\n        <Section>\n          <Title>\n            <FloatingCaption>제목</FloatingCaption>\n            {post.frontmatter.title}\n          </Title>\n        </Section>\n        <Section>\n          <Authors>\n            <FloatingCaption>글쓴이</FloatingCaption>\n            {post.frontmatter.author.map((username, index) => {\n              const author = authors.find((author) => author.username === username)\n\n              if (!author) { return null }\n\n              return (\n                <Author\n                  key={index}\n                  {...author}\n                />\n              )\n            })}\n          </Authors>\n        </Section>\n        <Section>\n          <ContentContainer>\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n          </ContentContainer>\n        </Section>\n      </PostContainer>\n    </Layout>\n  )\n}\n\nconst PostContainer = styled.div`\n  margin-top: 3.5rem;\n`\n\nconst FloatingCaption = styled.div`\n  font-size: .875rem;\n  position: absolute;\n  top: .25rem;\n  left: 0;\n`\n\nconst Title = styled.div`\n  font-size: 2.125rem;\n  font-weight: 500;\n  position: relative;\n  padding: 0 5.625rem;\n  margin-bottom: 3rem;\n`\n\nconst Authors = styled.div`\n  position: relative;\n  padding: 0 8.75rem;\n  margin-bottom: 2rem;\n`\n\nconst ContentContainer = styled.div`\n  padding: 0 8.75rem;\n  line-height: 1.5625;\n`\n\nconst Author: React.FC<IAuthor> = (props) => {\n  return (\n    <AuthorContainer>\n      <AuthorAvatar />\n      <AuthorRight>\n        <AuthorNames>\n          <AuthorDisplayName>{props.displayName}</AuthorDisplayName>\n          <AuthorUsername>@{props.username}</AuthorUsername>\n        </AuthorNames>\n        <AuthorIntroduction>\n          {props.introduction}\n        </AuthorIntroduction>\n      </AuthorRight>\n    </AuthorContainer>\n  )\n}\n\nconst AuthorContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n`\n\nconst AuthorAvatar = styled.div`\n  width: 4.375rem;\n  height: 4.375rem;\n  border-radius: 2.25rem;\n  background: #E9ECEF;\n  margin-right: 1rem;\n`\n\nconst AuthorRight = styled.div`\n  flex: 1;\n`\n\nconst AuthorNames = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: .625rem;\n`\n\nconst AuthorDisplayName = styled.div`\n  font-size: 1.375rem;\n  font-weight: 700;\n  margin-right: .75rem;\n`\n\nconst AuthorUsername = styled.div`\n  font-size: .875rem;\n`\n\nconst AuthorIntroduction = styled.div`\n  font-size: .875rem;\n  line-height: 1.33;\n`\n\nexport const query = graphql`\n  query getPostTemplate($slug: String!) {\n    post: markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        author\n      }\n    }\n  }\n`\n\nexport default TemplatePost\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n"],"sourceRoot":""}